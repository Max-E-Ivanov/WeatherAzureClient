//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherDAL.WeatherServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherDetails", Namespace="http://schemas.datacontract.org/2004/07/WeatherWCFServiceWebRole")]
    [System.SerializableAttribute()]
    public partial class WeatherDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double feelslike_cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double feelslike_fField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string icon_urlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string local_time_rfc822Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherDAL.WeatherServiceReference.Location observation_locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string observation_timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string observation_time_rfc822Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double pressure_mbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string relative_humidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string solarradiationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double temp_cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double temp_fField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double visibility_kmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double visibility_miField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string weatherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string wind_dirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double wind_kphField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UV {
            get {
                return this.UVField;
            }
            set {
                if ((this.UVField.Equals(value) != true)) {
                    this.UVField = value;
                    this.RaisePropertyChanged("UV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double feelslike_c {
            get {
                return this.feelslike_cField;
            }
            set {
                if ((this.feelslike_cField.Equals(value) != true)) {
                    this.feelslike_cField = value;
                    this.RaisePropertyChanged("feelslike_c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double feelslike_f {
            get {
                return this.feelslike_fField;
            }
            set {
                if ((this.feelslike_fField.Equals(value) != true)) {
                    this.feelslike_fField = value;
                    this.RaisePropertyChanged("feelslike_f");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icon_url {
            get {
                return this.icon_urlField;
            }
            set {
                if ((object.ReferenceEquals(this.icon_urlField, value) != true)) {
                    this.icon_urlField = value;
                    this.RaisePropertyChanged("icon_url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string local_time_rfc822 {
            get {
                return this.local_time_rfc822Field;
            }
            set {
                if ((object.ReferenceEquals(this.local_time_rfc822Field, value) != true)) {
                    this.local_time_rfc822Field = value;
                    this.RaisePropertyChanged("local_time_rfc822");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherDAL.WeatherServiceReference.Location observation_location {
            get {
                return this.observation_locationField;
            }
            set {
                if ((object.ReferenceEquals(this.observation_locationField, value) != true)) {
                    this.observation_locationField = value;
                    this.RaisePropertyChanged("observation_location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string observation_time {
            get {
                return this.observation_timeField;
            }
            set {
                if ((object.ReferenceEquals(this.observation_timeField, value) != true)) {
                    this.observation_timeField = value;
                    this.RaisePropertyChanged("observation_time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string observation_time_rfc822 {
            get {
                return this.observation_time_rfc822Field;
            }
            set {
                if ((object.ReferenceEquals(this.observation_time_rfc822Field, value) != true)) {
                    this.observation_time_rfc822Field = value;
                    this.RaisePropertyChanged("observation_time_rfc822");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double pressure_mb {
            get {
                return this.pressure_mbField;
            }
            set {
                if ((this.pressure_mbField.Equals(value) != true)) {
                    this.pressure_mbField = value;
                    this.RaisePropertyChanged("pressure_mb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string relative_humidity {
            get {
                return this.relative_humidityField;
            }
            set {
                if ((object.ReferenceEquals(this.relative_humidityField, value) != true)) {
                    this.relative_humidityField = value;
                    this.RaisePropertyChanged("relative_humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string solarradiation {
            get {
                return this.solarradiationField;
            }
            set {
                if ((object.ReferenceEquals(this.solarradiationField, value) != true)) {
                    this.solarradiationField = value;
                    this.RaisePropertyChanged("solarradiation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double temp_c {
            get {
                return this.temp_cField;
            }
            set {
                if ((this.temp_cField.Equals(value) != true)) {
                    this.temp_cField = value;
                    this.RaisePropertyChanged("temp_c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double temp_f {
            get {
                return this.temp_fField;
            }
            set {
                if ((this.temp_fField.Equals(value) != true)) {
                    this.temp_fField = value;
                    this.RaisePropertyChanged("temp_f");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double visibility_km {
            get {
                return this.visibility_kmField;
            }
            set {
                if ((this.visibility_kmField.Equals(value) != true)) {
                    this.visibility_kmField = value;
                    this.RaisePropertyChanged("visibility_km");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double visibility_mi {
            get {
                return this.visibility_miField;
            }
            set {
                if ((this.visibility_miField.Equals(value) != true)) {
                    this.visibility_miField = value;
                    this.RaisePropertyChanged("visibility_mi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string weather {
            get {
                return this.weatherField;
            }
            set {
                if ((object.ReferenceEquals(this.weatherField, value) != true)) {
                    this.weatherField = value;
                    this.RaisePropertyChanged("weather");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string wind_dir {
            get {
                return this.wind_dirField;
            }
            set {
                if ((object.ReferenceEquals(this.wind_dirField, value) != true)) {
                    this.wind_dirField = value;
                    this.RaisePropertyChanged("wind_dir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double wind_kph {
            get {
                return this.wind_kphField;
            }
            set {
                if ((this.wind_kphField.Equals(value) != true)) {
                    this.wind_kphField = value;
                    this.RaisePropertyChanged("wind_kph");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/WeatherWCFServiceWebRole")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string elevationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double longitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string elevation {
            get {
                return this.elevationField;
            }
            set {
                if ((object.ReferenceEquals(this.elevationField, value) != true)) {
                    this.elevationField = value;
                    this.RaisePropertyChanged("elevation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlmanacDetails", Namespace="http://schemas.datacontract.org/2004/07/WeatherWCFServiceWebRole")]
    [System.SerializableAttribute()]
    public partial class AlmanacDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string airport_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherDAL.WeatherServiceReference.AlmanacRecord temp_highField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherDAL.WeatherServiceReference.AlmanacRecord temp_lowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string airport_code {
            get {
                return this.airport_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.airport_codeField, value) != true)) {
                    this.airport_codeField = value;
                    this.RaisePropertyChanged("airport_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherDAL.WeatherServiceReference.AlmanacRecord temp_high {
            get {
                return this.temp_highField;
            }
            set {
                if ((object.ReferenceEquals(this.temp_highField, value) != true)) {
                    this.temp_highField = value;
                    this.RaisePropertyChanged("temp_high");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherDAL.WeatherServiceReference.AlmanacRecord temp_low {
            get {
                return this.temp_lowField;
            }
            set {
                if ((object.ReferenceEquals(this.temp_lowField, value) != true)) {
                    this.temp_lowField = value;
                    this.RaisePropertyChanged("temp_low");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlmanacRecord", Namespace="http://schemas.datacontract.org/2004/07/WeatherWCFServiceWebRole")]
    [System.SerializableAttribute()]
    public partial class AlmanacRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherDAL.WeatherServiceReference.Record normalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherDAL.WeatherServiceReference.Record recordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int recordyearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherDAL.WeatherServiceReference.Record normal {
            get {
                return this.normalField;
            }
            set {
                if ((object.ReferenceEquals(this.normalField, value) != true)) {
                    this.normalField = value;
                    this.RaisePropertyChanged("normal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherDAL.WeatherServiceReference.Record record {
            get {
                return this.recordField;
            }
            set {
                if ((object.ReferenceEquals(this.recordField, value) != true)) {
                    this.recordField = value;
                    this.RaisePropertyChanged("record");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int recordyear {
            get {
                return this.recordyearField;
            }
            set {
                if ((this.recordyearField.Equals(value) != true)) {
                    this.recordyearField = value;
                    this.RaisePropertyChanged("recordyear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Record", Namespace="http://schemas.datacontract.org/2004/07/WeatherWCFServiceWebRole")]
    [System.SerializableAttribute()]
    public partial class Record : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double C {
            get {
                return this.CField;
            }
            set {
                if ((this.CField.Equals(value) != true)) {
                    this.CField = value;
                    this.RaisePropertyChanged("C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double F {
            get {
                return this.FField;
            }
            set {
                if ((this.FField.Equals(value) != true)) {
                    this.FField = value;
                    this.RaisePropertyChanged("F");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherServiceReference.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetCurrentWeather", ReplyAction="http://tempuri.org/IWeatherService/GetCurrentWeatherResponse")]
        WeatherDAL.WeatherServiceReference.WeatherDetails GetCurrentWeather(string sCountry, string sCity, string sLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetCurrentWeather", ReplyAction="http://tempuri.org/IWeatherService/GetCurrentWeatherResponse")]
        System.Threading.Tasks.Task<WeatherDAL.WeatherServiceReference.WeatherDetails> GetCurrentWeatherAsync(string sCountry, string sCity, string sLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetAlmanacWeather", ReplyAction="http://tempuri.org/IWeatherService/GetAlmanacWeatherResponse")]
        WeatherDAL.WeatherServiceReference.AlmanacDetails GetAlmanacWeather(string sCountry, string sCity, string sLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetAlmanacWeather", ReplyAction="http://tempuri.org/IWeatherService/GetAlmanacWeatherResponse")]
        System.Threading.Tasks.Task<WeatherDAL.WeatherServiceReference.AlmanacDetails> GetAlmanacWeatherAsync(string sCountry, string sCity, string sLang);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : WeatherDAL.WeatherServiceReference.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<WeatherDAL.WeatherServiceReference.IWeatherService>, WeatherDAL.WeatherServiceReference.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WeatherDAL.WeatherServiceReference.WeatherDetails GetCurrentWeather(string sCountry, string sCity, string sLang) {
            return base.Channel.GetCurrentWeather(sCountry, sCity, sLang);
        }
        
        public System.Threading.Tasks.Task<WeatherDAL.WeatherServiceReference.WeatherDetails> GetCurrentWeatherAsync(string sCountry, string sCity, string sLang) {
            return base.Channel.GetCurrentWeatherAsync(sCountry, sCity, sLang);
        }
        
        public WeatherDAL.WeatherServiceReference.AlmanacDetails GetAlmanacWeather(string sCountry, string sCity, string sLang) {
            return base.Channel.GetAlmanacWeather(sCountry, sCity, sLang);
        }
        
        public System.Threading.Tasks.Task<WeatherDAL.WeatherServiceReference.AlmanacDetails> GetAlmanacWeatherAsync(string sCountry, string sCity, string sLang) {
            return base.Channel.GetAlmanacWeatherAsync(sCountry, sCity, sLang);
        }
    }
}
